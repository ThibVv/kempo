version: '3.8'

services:
  # Base de donnÃ©es MySQL
  mysql:
    image: mysql:8.0
    container_name: kempo-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secure_root_password}
      MYSQL_DATABASE: ${DB_NAME:-kempo_db}
      MYSQL_USER: ${DB_USERNAME:-kempo_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secure_database_password}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - kempo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: kempo-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://kempo_user:secure_database_password@mysql:3306/kempo_db
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-kempo_db}
      DB_USERNAME: ${DB_USERNAME:-kempo_user}
      DB_PASSWORD: ${DB_PASSWORD:-secure_database_password}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-minimum-32-characters-long}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-encryption-key-must-be-very-long-and-secure}
      ENCRYPTION_SALT: ${ENCRYPTION_SALT:-your-unique-salt-for-key-derivation}
      MAILJET_API_KEY: ${MAILJET_API_KEY}
      MAILJET_SECRET_KEY: ${MAILJET_SECRET_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      PORT: 3001
      HOST: 0.0.0.0
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - kempo-network
    volumes:
      - ./logs:/var/log/kempo
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: kempo-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:3001}
    ports:
      - "3000:8080"
    depends_on:
      - backend
    networks:
      - kempo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Reverse Proxy Nginx (optionnel pour production)
  nginx:
    image: nginx:alpine
    container_name: kempo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - kempo-network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  
networks:
  kempo-network:
    driver: bridge
